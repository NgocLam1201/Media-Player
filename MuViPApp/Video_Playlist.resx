<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuGradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABCSURBVChTjcOhEQBBCAPAFIU5hcFgUBgMhv5ryJfw2ZmF
        mVGJ9x6VcHcqERFUIjOpRFVRie6mEjNDJXaXStwd/x8/UIC8Uw7O/twAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>